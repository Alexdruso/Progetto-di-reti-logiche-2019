CU:
	in:
		- clk [EXT]
		- start [EXT]
		- rst [EXT]
		- loader_done
	out:
		- done [EXT]
		- loader_wz_en
		- loader_encode_en
		- writer_en

RAM_DRIVER:
	in:
		- addr_ram_from_loader
		- addr_ram_from_writer
		- data_ram_from_writer
		- driver_loader_en
		- driver_writer_en
	out:
		- addr_ram [EXT]
		- data_ram_out [EXT]
		- en_ram [EXT]
		- we_ram [EXT]

LOADER:
	in:
		- clk [EXT]
		- rst [EXT]
		- data_ram_in [EXT]
		- loader_wz_en
		- loader_encode_en
	out:
		- loader_done
		- addr_ram_from_loader
		- driver_loader_en
		- addr_reg
		- data_from_loader
		- reg_we

DECODER:
	in:
		- addr
	out:
		- out1 (vector 2^N-1..0)

REG[*]:
	in:
		- load
		- in1
		- clk [EXT]
		- rst [EXT]
	out:
		- out1

MEMORY:
	in:
		- addr_reg
		- data_in
		- clk [EXT]
		- rst [EXT]
		- we
	out:
		- data[0..7]

ENCODER:
	in:
		-wz[0..7]
		-to_be_encoded
	out:
		-coded_result

WRITER:
	in:
		- data_in
		- write_control
	out:
		- data_to_write
		- address_to_write
		- write_enable